
// Workflow details
manifest {
    author              = 'Ching-yu Lu, Sydney Informatics Hub, University of Sydney'
    name                = 'fastqc-nf'
    description         = 'evaluate the quality of high-throughput sequencing reads'
    homePage            = 'https://github.com/Sydney-Informatics-Hub/fastqc-nf'
    }

// Mandate a minimum version of nextflow required to run the pipeline
nextflowVersion     = '!>=20.07.1'

// Preset use of containers with Singularity
singularity {
    enabled		    = true
    autoMounts		= true
    }
    
// Define parameters 
params{    
    fq_dir = "/scratch/nextflow/bio-test-datasets/fastq"
    fqs = "$fq_dir/*_R{1,2}_10k.fq.gz"
    output = ''
    help = false
}

// Resources for each process

process {

withName: 'fastqc' {
	cpus    = 2
	memory  = 12.GB
  container	= 'quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0'
  }

withName: 'multiqc' {
	cpus    = 2
	memory = 12.GB
  container	= 'quay.io/biocontainers/multiqc:1.18--pyhdfd78af_0'
  }
}

// Define timestamp, to avoid overwriting existing trace
def timestamp = new java.util.Date().format('yyyy-MM-dd_HH-mm-ss')

// Produce a workflow diagram
dag {
  enabled = true
  file = "${params.output}/runInfo/fastqcnf_dag_${timestamp}.svg"
}

report {
  enabled = true
  file = "${params.output}/runInfo/fastqcnf_report_${timestamp}.html"
}

timeline {
  enabled = true
	overwrite = true
	file = "${params.output}/runInfo/fastqcnf_timeline_${timestamp}.html"
}

trace {
	enabled = true
	overwrite = true
  file = "${params.output}/runInfo/fastqcnf_trace_${timestamp}.txt"
  fields = 'process,name,status,queue,realtime,cpus,%cpu,memory,%mem,rss,env'
}